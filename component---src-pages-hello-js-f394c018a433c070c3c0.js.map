{"version":3,"sources":["webpack:///./src/examples/hello.js","webpack:///./src/pages/hello.js"],"names":["GenerateItem","index","user","getUser","totalCount","overscan","item","style","height","width","sidebar","path","Helmet","name","content"],"mappings":"yKAKMA,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAUC,KAAMC,YAAQF,GAAQA,MAAOA,KAGjC,oBACb,kBAAC,IAAD,CACEG,WAAY,IACZC,SAAU,IACVC,KAAMN,EACNO,MAAO,CAAEC,OAAQ,QAASC,MAAO,Y,SCRtB,4BACb,kBAAC,IAAD,CAAQC,QAAS,kBAAM,kBAAC,IAAD,CAAQC,KAAK,YAClC,kBAACC,EAAA,OAAD,KACE,0BACEC,KAAK,cACLC,QAAQ,0EAGZ,+CACA,2KAIE,sCAJF,mBAMA,+DACmC,uCADnC,iJAOA,kBAAC,EAAD","file":"component---src-pages-hello-js-f394c018a433c070c3c0.js","sourcesContent":["import React from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport { UserItem } from './ExampleComponents'\n\nconst GenerateItem = index => {\n  return <UserItem user={getUser(index)} index={index} />\n}\n\nexport default () => (\n  <Virtuoso\n    totalCount={100000}\n    overscan={200}\n    item={GenerateItem}\n    style={{ height: '400px', width: '350px' }}\n  />\n)\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/hello'\nimport { Helmet } from 'react-helmet'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"Hello\" />}>\n    <Helmet>\n      <meta\n        name=\"description\"\n        content=\"React Virtuoso live example with large data set with dynamic height.\"\n      />\n    </Helmet>\n    <h2> 100 000 Items </h2>\n    <p>\n      The Virtuoso component is built for the display of huge lists -\n      you do not have to configure anything apart from the total item\n      count and the\n      <code>item</code> prop renderer.\n    </p>\n    <p>\n      The prop render callback accepts <code>index</code> parameter,\n      which specifies the absolute index of the item being rendered;\n      It is up to you to build and return the respective content for\n      it.\n    </p>\n\n    <Example />\n  </Layout>\n)\n"],"sourceRoot":""}