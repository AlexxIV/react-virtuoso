{"version":3,"sources":["webpack:///./src/examples/AutoResizing.js","webpack:///./src/pages/auto-resizing.js","webpack:///./src/examples/FakeData.js"],"names":["AutoResizing","react_default","a","createElement","react_virtuoso_es_production","style","width","height","totalCount","item","index","user","getUser","title","name","ExampleComponents","even","color","fgColor","backgroundColor","bgColor","initials","longText","footer","padding","textAlign","__webpack_exports__","layout","sidebar","source","path","generated","firstName","faker","lastName","substr","description","company","catchPhrase","commerce","lorem","paragraphs","avatar","internet","generateGroupedUsers","max","users","i","push","sort","b","groupedUsers","groupBy","groupCounts","Object","values","map","length","groups","keys"],"mappings":"2KASeA,EAAA,kBACbC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAChCC,WAAY,IACZC,KAAM,SAAAC,GACJ,IAAMC,EAAOC,YAAQF,GACfG,EAAWH,EAAQ,EAAd,KAAoBC,EAAKG,KACpC,OACEb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAiBC,KAAMN,EAAQ,GAAM,GACnCT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEV,MAAO,CACLY,MAAON,EAAKO,QACZC,gBAAiBR,EAAKS,UAGvBT,EAAKU,UAERpB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAiBF,MAAOA,GACrBF,EAAKW,YAKdC,OAAQ,kBACNtB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEmB,QAAS,OAAQC,UAAW,WAA1C,yBC5BSC,EAAA,0BACbzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,QAAS,kBAAM3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQC,KAAK,mBAClC7B,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,sMAKAF,EAAAC,EAAAC,cAAA,6GAIAF,EAAAC,EAAAC,cAACH,EAAD,uLCdE+B,EAAY,GAELnB,EAAU,SAAAF,GACrB,IAAKqB,EAAUrB,GAAQ,CACrB,IAAIsB,EAAYC,IAAMnB,KAAKkB,YACvBE,EAAWD,IAAMnB,KAAKoB,WAC1BH,EAAUrB,GAAS,CACjBI,KAASkB,EAAL,IAAkBE,EACtBb,SAAQ,GAAKW,EAAUG,OAAO,EAAG,GAAKD,EAASC,OAAO,EAAG,GACzDC,YAAaH,IAAMI,QAAQC,cAC3BlB,QAASa,IAAMM,SAAStB,QACxBC,QAASe,IAAMM,SAAStB,QACxBK,SAAUW,IAAMO,MAAMC,WAAW,GACjCC,OAAQT,IAAMU,SAASD,UAG3B,OAAOX,EAAUrB,IAGNkC,EAAuB,SAAAC,GAElC,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAME,KAAKpC,EAAQmC,IAGrBD,EAAMG,KAAK,SAAC/C,EAAGgD,GACb,OAAIhD,EAAEY,KAAOoC,EAAEpC,MACL,EAENZ,EAAEY,KAAOoC,EAAEpC,KACN,EAEF,IAGT,IAAMqC,EAAeC,kBAAQN,EAAO,SAAAnC,GAAI,OAAIA,EAAKG,KAAK,KAItD,MAAO,CAAEgC,QAAOO,YAHIC,OAAOC,OAAOJ,GAAcK,IAAI,SAAAV,GAAK,OAAIA,EAAMW,SAGtCC,OAFdJ,OAAOK,KAAKR","file":"component---src-pages-auto-resizing-js-5b21102604a4b96f8faa.js","sourcesContent":["import React from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport {\n  ExampleListItem,\n  ExampleAvatar,\n  ExampleUserInfo,\n} from './ExampleComponents'\n\nexport default () => (\n  <Virtuoso\n    style={{ width: '100%', height: '400px' }}\n    totalCount={100}\n    item={index => {\n      const user = getUser(index)\n      const title = `${index + 1}. ${user.name}`\n      return (\n        <ExampleListItem even={index % 2 === 0}>\n          <ExampleAvatar\n            style={{\n              color: user.fgColor,\n              backgroundColor: user.bgColor,\n            }}\n          >\n            {user.initials}\n          </ExampleAvatar>\n          <ExampleUserInfo title={title}>\n            {user.longText}\n          </ExampleUserInfo>\n        </ExampleListItem>\n      )\n    }}\n    footer={() => (\n      <div style={{ padding: '1rem', textAlign: 'center' }}>\n        -- end reached --\n      </div>\n    )}\n  />\n)\n","import React from 'react';\nimport Layout from '../components/layout';\nimport Source from '../components/source';\nimport Example from '../examples/AutoResizing';\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"AutoResizing\" />}>\n    <h2>Automatic Resizing</h2>\n    <p>\n      The Virtuoso component will automatically handle changes of the\n      items&apos; heights (due to content being resized, images being loaded,\n      etc). You don&apos;t have to configure anything additional.\n    </p>\n    <p>\n      Resize your browser and scroll the list around &ndash; the items\n      reposition correctly without overlap.\n    </p>\n    <Example />\n  </Layout>\n);\n","import faker from \"faker\"\nimport { groupBy } from \"lodash\"\n\nconst generated = []\n\nexport const getUser = index => {\n  if (!generated[index]) {\n    let firstName = faker.name.firstName()\n    let lastName = faker.name.lastName()\n    generated[index] = {\n      name: `${firstName} ${lastName}`,\n      initials: `${firstName.substr(0, 1)}${lastName.substr(0, 1)}`,\n      description: faker.company.catchPhrase(),\n      bgColor: faker.commerce.color(),\n      fgColor: faker.commerce.color(),\n      longText: faker.lorem.paragraphs(4),\n      avatar: faker.internet.avatar(),\n    }\n  }\n  return generated[index]\n}\n\nexport const generateGroupedUsers = max => {\n  const users = []\n  for (let i = 0; i < max; i++) {\n    users.push(getUser(i))\n  }\n\n  users.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1\n    }\n    if (a.name > b.name) {\n      return 1\n    }\n    return 0\n  })\n\n  const groupedUsers = groupBy(users, user => user.name[0])\n  const groupCounts = Object.values(groupedUsers).map(users => users.length)\n  const groups = Object.keys(groupedUsers)\n\n  return { users, groupCounts, groups }\n}\n"],"sourceRoot":""}