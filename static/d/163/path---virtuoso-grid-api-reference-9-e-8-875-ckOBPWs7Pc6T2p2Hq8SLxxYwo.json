{"data":{"virtuosoGridApi":"## Properties of the `VirtuosoGrid` Component\n\n### `totalCount: number`\n\nMandatory. Specifies the total amount of items to be displayed by the grid.\n\n### `item: (index: number) => ReactElement`\n\nMandatory. Specifies how each item gets rendered. The callback receives the zero-based index of the item.\n\n### `listClassName?: string`\n\nDefaults to `virtuoso-grid-list`. Use this to specify the `className` of the item container element. See [the grid demo](/grid-responsive-columns) for a working example.\n\n### `itemClassName?: string`\n\nDefaults to `virtuoso-grid-item`. Use this to specify the `className` of the item elements. See [the grid demo](/grid-responsive-columns) for a working example.\n\n### `overscan?: number`\n\nOptional. Causes the component to render extra content in addition to the necessary one to fill in the visible viewport.\n\n### `style?: CSSProperties`\n\nOptional; most often, you will need to tweak the size of the component by setting `width` and `height`.\nThe style is passed to the outermost `div` element of the component.\n\n### `className?: string`\n\nOptional; sets the CSS class of the outermost element of the component.\n\n### `ScrollContainer?: TScrollContainer`\n\nOptional. Can be used to replace and extend the scrollable element of the component.\nCheck the [custom scroll container](/custom-scroll-container) for sample usage.\n\n### `scrollingStateChange?: (isScrolling: boolean) => void`\n\nGets called when the user starts / stops scrolling. Can be used to hide complex item contents during scrolling.\n\n### `endReached?: (index: number) => void`\n\nGets called when the user scrolls to the end of the grid.\nReceives the last item index as an argument. Can be used to implement [endless scrolling](/endless-scrolling).\n\n## Methods\n\n### `scrollToIndex(location: number | { index: number, align: 'start'|'center'|'end' }): void`\n\nScrolls the specified item into view. Passing an object allows the item to be aligned to the top, center or end of the grid.\n"},"pageContext":{"isCreatedByStatefulCreatePages":true}}