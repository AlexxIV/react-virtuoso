{"version":3,"sources":["webpack:///./src/examples/EndlessScrolling.js","webpack:///./src/pages/endless-scrolling.js","webpack:///./src/examples/FakeData.js"],"names":["GenerateItem","index","react_default","a","createElement","ExampleComponents","user","getUser","EndlessScrolling","_useState","useState","total","setTotal","items","useRef","loading","loadMore","useCallback","current","setTimeout","concat","length","useEffect","react_virtuoso_es_production","style","width","height","overscan","totalCount","item","endReached","footer","padding","textAlign","__webpack_exports__","layout","sidebar","source","path","generated","firstName","faker","name","lastName","initials","substr","description","company","catchPhrase","bgColor","commerce","color","fgColor","longText","lorem","paragraphs","avatar","internet","generateGroupedUsers","max","users","i","push","sort","b","groupedUsers","groupBy","groupCounts","Object","values","map","groups","keys"],"mappings":"kKAUMA,EAAe,SAAAC,GACnB,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAMC,YAAQN,GAAQA,MAAOA,KAGjCO,EAAA,WAAM,IAAAC,EACOC,mBAAS,GAA5BC,EADYF,EAAA,GACLG,EADKH,EAAA,GAEbI,EAAQC,iBAAO,IACfC,EAAUD,kBAAO,GAMjBE,EAAWC,sBAAY,WACvBF,EAAQG,UAGZH,EAAQG,SAAU,EAElBC,WAAW,WACT,IAAK,IAAIlB,EAAQU,EAAOV,EAAQU,EAAQA,EAAQ,GAAIV,IAClDY,EAAMK,QAAN,GAAAE,OAAoBP,EAAMK,QAA1B,CAAmCX,YAAQN,KAE7Cc,EAAQG,SAAU,EAClBN,EAASC,EAAMK,QAAQG,SACtB,OACF,IAMH,OAJAC,oBAAU,WACRN,KACC,IAGDd,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,QAASC,OAAQ,SACjCC,SAAU,IACVC,WAAYjB,EACZkB,KAAM7B,EACN8B,WAAY,kBAAMd,KAClBe,OAAQ,WACN,OACE7B,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEQ,QAAS,OAAQC,UAAW,WAA1C,kBC9CKC,EAAA,0BACbhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,QAAS,kBAAMlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQC,KAAK,uBAClCpC,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,gBACMF,EAAAC,EAAAC,cAAA,0BADN,2GAKAF,EAAAC,EAAAC,cAAA,wFAIAF,EAAAC,EAAAC,cAACI,EAAD,uLCdE+B,EAAY,GAELhC,EAAU,SAAAN,GACrB,IAAKsC,EAAUtC,GAAQ,CACrB,IAAIuC,EAAYC,IAAMC,KAAKF,YACvBG,EAAWF,IAAMC,KAAKC,WAC1BJ,EAAUtC,GAAS,CACjByC,KAASF,EAAL,IAAkBG,EACtBC,SAAQ,GAAKJ,EAAUK,OAAO,EAAG,GAAKF,EAASE,OAAO,EAAG,GACzDC,YAAaL,IAAMM,QAAQC,cAC3BC,QAASR,IAAMS,SAASC,QACxBC,QAASX,IAAMS,SAASC,QACxBE,SAAUZ,IAAMa,MAAMC,WAAW,GACjCC,OAAQf,IAAMgB,SAASD,UAG3B,OAAOjB,EAAUtC,IAGNyD,EAAuB,SAAAC,GAElC,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAME,KAAKvD,EAAQsD,IAGrBD,EAAMG,KAAK,SAAC5D,EAAG6D,GACb,OAAI7D,EAAEuC,KAAOsB,EAAEtB,MACL,EAENvC,EAAEuC,KAAOsB,EAAEtB,KACN,EAEF,IAGT,IAAMuB,EAAeC,kBAAQN,EAAO,SAAAtD,GAAI,OAAIA,EAAKoC,KAAK,KAItD,MAAO,CAAEkB,QAAOO,YAHIC,OAAOC,OAAOJ,GAAcK,IAAI,SAAAV,GAAK,OAAIA,EAAMvC,SAGtCkD,OAFdH,OAAOI,KAAKP","file":"component---src-pages-endless-scrolling-js-3aec5cb806f788f3f79b.js","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n} from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport { UserItem } from './ExampleComponents'\n\nconst GenerateItem = index => {\n  return <UserItem user={getUser(index)} index={index} />\n}\n\nexport default () => {\n  const [total, setTotal] = useState(0)\n  const items = useRef([])\n  const loading = useRef(false)\n\n  // the setTimeout below simulates a network request.\n  // In the real world, you can fetch data from a service.\n  // the setTotal call will trigger a refresh for the list,\n  // so make sure you call it last\n  const loadMore = useCallback(() => {\n    if (loading.current) {\n      return\n    }\n    loading.current = true\n\n    setTimeout(() => {\n      for (let index = total; index < total + total + 20; index++) {\n        items.current = [...items.current, getUser(index)]\n      }\n      loading.current = false\n      setTotal(items.current.length)\n    }, 500)\n  }, [])\n\n  useEffect(() => {\n    loadMore()\n  }, [])\n\n  return (\n    <Virtuoso\n      style={{ width: '350px', height: '400px' }}\n      overscan={500}\n      totalCount={total}\n      item={GenerateItem}\n      endReached={() => loadMore()}\n      footer={() => {\n        return (\n          <div style={{ padding: '2rem', textAlign: 'center' }}>\n            Loading...\n          </div>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/EndlessScrolling'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"EndlessScrolling\" />}>\n    <h2> Endless Scrolling </h2>\n    <p>\n      The <code>endReached</code> callback can be used to\n      automatically load more items when the user scrolls to the\n      bottom of the list.\n    </p>\n    <p>\n      Scroll fast to the bottom of the list to see additional items\n      being loaded.\n    </p>\n    <Example />\n  </Layout>\n)\n","import faker from \"faker\"\nimport { groupBy } from \"lodash\"\n\nconst generated = []\n\nexport const getUser = index => {\n  if (!generated[index]) {\n    let firstName = faker.name.firstName()\n    let lastName = faker.name.lastName()\n    generated[index] = {\n      name: `${firstName} ${lastName}`,\n      initials: `${firstName.substr(0, 1)}${lastName.substr(0, 1)}`,\n      description: faker.company.catchPhrase(),\n      bgColor: faker.commerce.color(),\n      fgColor: faker.commerce.color(),\n      longText: faker.lorem.paragraphs(4),\n      avatar: faker.internet.avatar(),\n    }\n  }\n  return generated[index]\n}\n\nexport const generateGroupedUsers = max => {\n  const users = []\n  for (let i = 0; i < max; i++) {\n    users.push(getUser(i))\n  }\n\n  users.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1\n    }\n    if (a.name > b.name) {\n      return 1\n    }\n    return 0\n  })\n\n  const groupedUsers = groupBy(users, user => user.name[0])\n  const groupCounts = Object.values(groupedUsers).map(users => users.length)\n  const groups = Object.keys(groupedUsers)\n\n  return { users, groupCounts, groups }\n}\n"],"sourceRoot":""}