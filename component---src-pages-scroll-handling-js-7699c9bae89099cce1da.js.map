{"version":3,"sources":["webpack:///./src/examples/ScrollHandling.js","webpack:///./src/pages/scroll-handling.js"],"names":["useState","isScrolling","setIsScrolling","style","height","width","totalCount","scrollingStateChange","scrolling","item","index","user","getUser","title","name","even","backgroundColor","src","avatar","description","sidebar","path","Helmet","content"],"mappings":"iLAUe,aAAO,IAAD,EACmBA,oBAAS,GAAxCC,EADY,KACCC,EADD,KAGnB,OACE,kBAAC,IAAD,CACEC,MAAO,CACLC,OAAQ,QACRC,MAAO,SAETC,WAAY,IACZC,qBAAsB,SAAAC,GACpBN,EAAeM,IAEjBC,KAAM,SAAAC,GACJ,IAAMC,EAAOC,YAAQF,GACfG,EAAWH,EAAQ,EAAd,KAAoBC,EAAKG,KACpC,OACE,kBAAC,IAAD,CAAiBC,KAAML,EAAQ,GAAM,GAClCT,EACC,kBAAC,IAAD,CAAeE,MAAO,CAAEa,gBAAiB,SAAzC,KAIA,kBAAC,IAAD,CAAkBC,IAAKN,EAAKO,SAG9B,kBAAC,IAAD,CAAiBL,MAAOA,GACrBF,EAAKQ,kB,SC/BL,4BACb,kBAAC,IAAD,CAAQC,QAAS,kBAAM,kBAAC,IAAD,CAAQC,KAAK,qBAClC,kBAACC,EAAA,OAAD,KACE,0BACER,KAAK,cACLS,QAAQ,yIAGZ,kDACA,4GAIA,6EACkD,IAChD,sDAFF,kEAGmC,sCAHnC,uCAIuB,uCAJvB,yCAOA,yIAIA,qIAIA,kBAAC,EAAD","file":"component---src-pages-scroll-handling-js-7699c9bae89099cce1da.js","sourcesContent":["import React, { useState } from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport {\n  ExampleListItem,\n  ExampleAvatar,\n  ExampleUserInfo,\n  ExampleImgAvatar,\n} from './ExampleComponents'\n\nexport default () => {\n  const [isScrolling, setIsScrolling] = useState(false)\n\n  return (\n    <Virtuoso\n      style={{\n        height: '400px',\n        width: '350px',\n      }}\n      totalCount={100}\n      scrollingStateChange={scrolling => {\n        setIsScrolling(scrolling)\n      }}\n      item={index => {\n        const user = getUser(index)\n        const title = `${index + 1}. ${user.name}`\n        return (\n          <ExampleListItem even={index % 2 === 0}>\n            {isScrolling ? (\n              <ExampleAvatar style={{ backgroundColor: '#ccc' }}>\n                &nbsp;\n              </ExampleAvatar>\n            ) : (\n              <ExampleImgAvatar src={user.avatar} />\n            )}\n\n            <ExampleUserInfo title={title}>\n              {user.description}\n            </ExampleUserInfo>\n          </ExampleListItem>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/ScrollHandling'\nimport { Helmet } from 'react-helmet'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"ScrollHandling\" />}>\n    <Helmet>\n      <meta\n        name=\"description\"\n        content=\"React Virtuoso live example with performance tweak that simplifies content during scrolling using the scrollingStateChange callback\"\n      />\n    </Helmet>\n    <h2>Handling scrolling</h2>\n    <p>\n      Loading and rendering images while scrolling ruins the scrolling\n      performance.\n    </p>\n    <p>\n      To deal with this, the Virtuoso component emits{' '}\n      <code>scrollingStateChange</code> when the user starts / stops\n      scrolling. The callback receives <code>true</code> when the user\n      starts scrolling and <code>false</code> shortly after the last\n      scroll event.\n    </p>\n    <p>\n      Handling this event can be used to optimize performance by\n      hiding/replacing certain elements in the items.\n    </p>\n    <p>\n      In the example above, the image avatars are replaced with\n      placeholders when the user starts scrolling.\n    </p>\n    <Example />\n  </Layout>\n)\n"],"sourceRoot":""}