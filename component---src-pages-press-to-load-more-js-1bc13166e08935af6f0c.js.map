{"version":3,"sources":["webpack:///./src/examples/PressToLoadMore.js","webpack:///./src/pages/press-to-load-more.js"],"names":["GenerateItem","index","user","getUser","useState","total","setTotal","items","useRef","loading","setLoading","loadMore","useCallback","setTimeout","current","length","useEffect","style","width","height","totalCount","item","footer","padding","display","justifyContent","disabled","onClick","sidebar","path","Helmet","name","content"],"mappings":"yiBAUA,IAAMA,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAUC,KAAMC,YAAQF,GAAQA,MAAOA,KAGjC,aAAO,IAAD,EACOG,mBAAS,GAA5BC,EADY,KACLC,EADK,KAEbC,EAAQC,iBAAO,IAFF,EAGWJ,oBAAS,GAAhCK,EAHY,KAGHC,EAHG,KASbC,EAAWC,uBAAY,WAC3BF,GAAW,GAEXG,YAAW,WACT,IAAK,IAAIZ,EAAQI,EAAOJ,EAAQI,EAAQA,EAAQ,GAAIJ,IAClDM,EAAMO,QAAN,YAAoBP,EAAMO,SAA1B,CAAmCX,YAAQF,KAE7CS,GAAW,GACXJ,EAASC,EAAMO,QAAQC,UACtB,OACF,IAMH,OAJAC,qBAAU,WACRL,MACC,IAGD,kBAAC,IAAD,CACEM,MAAO,CAAEC,MAAO,QAASC,OAAQ,SACjCC,WAAYf,EACZgB,KAAMrB,EACNsB,OAAQ,WACN,OACE,yBACEL,MAAO,CACLM,QAAS,OACTC,QAAS,OACTC,eAAgB,WAGlB,4BAAQC,SAAUjB,EAASkB,QAAShB,GACjCF,EAAU,aAAe,2B,SChDzB,4BACb,kBAAC,IAAD,CAAQmB,QAAS,kBAAM,kBAAC,IAAD,CAAQC,KAAK,sBAClC,kBAACC,EAAA,OAAD,KACE,0BACEC,KAAK,cACLC,QAAQ,iHAGZ,kDACA,qIAIA,qHAIA,kBAAC,EAAD","file":"component---src-pages-press-to-load-more-js-1bc13166e08935af6f0c.js","sourcesContent":["import React, {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n} from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport { UserItem } from './ExampleComponents'\n\nconst GenerateItem = index => {\n  return <UserItem user={getUser(index)} index={index} />\n}\n\nexport default () => {\n  const [total, setTotal] = useState(0)\n  const items = useRef([])\n  const [loading, setLoading] = useState(false)\n\n  // the setTimeout below simulates a network request.\n  // In the real world, you can fetch data from a service.\n  // the setTotal call will trigger a refresh for the list,\n  // so make sure you call it last.\n  const loadMore = useCallback(() => {\n    setLoading(true)\n\n    setTimeout(() => {\n      for (let index = total; index < total + total + 20; index++) {\n        items.current = [...items.current, getUser(index)]\n      }\n      setLoading(false)\n      setTotal(items.current.length)\n    }, 500)\n  }, [])\n\n  useEffect(() => {\n    loadMore()\n  }, [])\n\n  return (\n    <Virtuoso\n      style={{ width: '350px', height: '400px' }}\n      totalCount={total}\n      item={GenerateItem}\n      footer={() => {\n        return (\n          <div\n            style={{\n              padding: '2rem',\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <button disabled={loading} onClick={loadMore}>\n              {loading ? 'Loading...' : 'Press to load more'}\n            </button>\n          </div>\n        )\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/PressToLoadMore'\nimport { Helmet } from 'react-helmet'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"PressToLoadMore\" />}>\n    <Helmet>\n      <meta\n        name=\"description\"\n        content=\"React Virtuoso live example that loads more content with a press to load more button at the end of the list\"\n      />\n    </Helmet>\n    <h2>Press to load more</h2>\n    <p>\n      The footer render property can be used to host a load more\n      button that appends more items to the list.\n    </p>\n    <p>\n      Scroll to the bottom of the list and press the load more button\n      to load 20 more items.\n    </p>\n    <Example />\n  </Layout>\n)\n"],"sourceRoot":""}