{"version":3,"sources":["webpack:///./src/examples/CustomScrollContainer.js","webpack:///./src/pages/custom-scroll-container.js"],"names":["GenerateItem","index","user","getUser","MyScrollContainer","className","style","reportScrollTop","scrollTo","children","elRef","useRef","scrollTop","top","ref","onScroll","e","target","border","borderRadius","tabIndex","ScrollContainer","totalCount","overscan","item","height","width","sidebar","path","Helmet","name","content","href"],"mappings":"gLAKMA,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAUC,KAAMC,YAAQF,GAAQA,MAAOA,KAe1CG,EAAoB,SAAC,GAMpB,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMC,EAAQC,iBAAO,MAMrB,OAJAH,GAAS,SAAAI,GACPF,EAAMF,SAAS,CAAEK,IAAKD,OAItB,yBACEE,IAAKJ,EACLK,SAAU,SAAAC,GAAC,OAAIT,EAAgBS,EAAEC,OAAOL,YACxCN,MAAK,iBACAA,EADA,CAEHY,OAAQ,kBACRC,aAAc,QAEhBC,SAAU,EACVf,UAAWA,GAEVI,IAKQ,oBACb,kBAAC,IAAD,CACEY,gBAAiBjB,EACjBkB,WAAY,IACZC,SAAU,IACVC,KAAMxB,EACNM,MAAO,CAAEmB,OAAQ,QAASC,MAAO,Y,SCnDtB,4BACb,kBAAC,IAAD,CAAQC,QAAS,kBAAM,kBAAC,IAAD,CAAQC,KAAK,4BAClC,kBAACC,EAAA,OAAD,KACE,0BACEC,KAAK,cACLC,QAAQ,yHAGZ,uDACA,kCACM,0CADN,wJAG4D,IAC1D,uBAAGC,KAAK,2DAAR,qBAJF,KASA,2FAGA,kBAAC,EAAD","file":"component---src-pages-custom-scroll-container-js-522d7b85267d481b5a4a.js","sourcesContent":["import React, { useRef } from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport { UserItem } from './ExampleComponents'\n\nconst GenerateItem = index => {\n  return <UserItem user={getUser(index)} index={index} />\n}\n\n// className is string | undefined, passed from\n// the root component\n//\n// style is CSSProperties, setting the size and the\n// overflow of the element. You may have to discard\n// some of those if setting up a custom scroller.\n//\n// scrollTo is an event emitter, which executes\n// the callback when the scrollToIndex method is called\n//\n// reportScrollTop should be wired up to the onScroll event,\n// passing the current scrollTop position\nconst MyScrollContainer = ({\n  className,\n  style,\n  reportScrollTop,\n  scrollTo,\n  children,\n}) => {\n  const elRef = useRef(null)\n\n  scrollTo(scrollTop => {\n    elRef.scrollTo({ top: scrollTop })\n  })\n\n  return (\n    <div\n      ref={elRef}\n      onScroll={e => reportScrollTop(e.target.scrollTop)}\n      style={{\n        ...style,\n        border: '5px dashed gray',\n        borderRadius: '4px',\n      }}\n      tabIndex={0}\n      className={className}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default () => (\n  <Virtuoso\n    ScrollContainer={MyScrollContainer}\n    totalCount={1000}\n    overscan={200}\n    item={GenerateItem}\n    style={{ height: '400px', width: '350px' }}\n  />\n)\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/CustomScrollContainer'\nimport { Helmet } from 'react-helmet'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"CustomScrollContainer\" />}>\n    <Helmet>\n      <meta\n        name=\"description\"\n        content=\"React Grouped Virtuoso example with custom scroll container - can be used to integrate custom scrollbar components.\"\n      />\n    </Helmet>\n    <h2>Custom Scroll Container</h2>\n    <p>\n      The <code>Virtuoso</code> component accepts an optional\n      ScrollContainer property, which can be used to customize the\n      scrollable element, allowing for example integration with{' '}\n      <a href=\"https://github.com/malte-wessel/react-custom-scrollbars\">\n        custom scrollbars\n      </a>\n      .\n    </p>\n    <p>\n      Check the comments in the source code pane for more details.\n    </p>\n    <Example />\n  </Layout>\n)\n"],"sourceRoot":""}