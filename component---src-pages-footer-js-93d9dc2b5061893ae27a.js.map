{"version":3,"sources":["webpack:///./src/examples/footer.js","webpack:///./src/pages/footer.js","webpack:///./src/examples/FakeData.js"],"names":["GenerateItem","index","react_default","a","createElement","ExampleComponents","user","getUser","examples_footer","react_virtuoso_es_production","style","height","width","totalCount","item","footer","padding","textAlign","__webpack_exports__","layout","sidebar","source","path","generated","firstName","faker","name","lastName","initials","substr","description","company","catchPhrase","bgColor","commerce","color","fgColor","longText","lorem","paragraphs","avatar","internet","generateGroupedUsers","max","users","i","push","sort","b","groupedUsers","groupBy","groupCounts","Object","values","map","length","groups","keys"],"mappings":"kKAKMA,EAAe,SAAAC,GACnB,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,KAAMC,YAAQN,GAAQA,MAAOA,KAGjCO,EAAA,kBACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCC,WAAY,IACZC,KAAMd,EACNe,OAAQ,kBACNb,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEM,QAAS,OAAQC,UAAW,WAA1C,yBCVSC,EAAA,0BACbhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,QAAS,kBAAMlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,KAAK,aAClCpB,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uDAC6CF,EAAAC,EAAAC,cAAA,sBAD7C,kIAKAF,EAAAC,EAAAC,cAAA,oDAC0CF,EAAAC,EAAAC,cAAA,iCAD1C,KAGAF,EAAAC,EAAAC,cAACI,EAAD,uLCbEe,EAAY,GAELhB,EAAU,SAAAN,GACrB,IAAKsB,EAAUtB,GAAQ,CACrB,IAAIuB,EAAYC,IAAMC,KAAKF,YACvBG,EAAWF,IAAMC,KAAKC,WAC1BJ,EAAUtB,GAAS,CACjByB,KAASF,EAAL,IAAkBG,EACtBC,SAAQ,GAAKJ,EAAUK,OAAO,EAAG,GAAKF,EAASE,OAAO,EAAG,GACzDC,YAAaL,IAAMM,QAAQC,cAC3BC,QAASR,IAAMS,SAASC,QACxBC,QAASX,IAAMS,SAASC,QACxBE,SAAUZ,IAAMa,MAAMC,WAAW,GACjCC,OAAQf,IAAMgB,SAASD,UAG3B,OAAOjB,EAAUtB,IAGNyC,EAAuB,SAAAC,GAElC,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAKE,IACvBD,EAAME,KAAKvC,EAAQsC,IAGrBD,EAAMG,KAAK,SAAC5C,EAAG6C,GACb,OAAI7C,EAAEuB,KAAOsB,EAAEtB,MACL,EAENvB,EAAEuB,KAAOsB,EAAEtB,KACN,EAEF,IAGT,IAAMuB,EAAeC,kBAAQN,EAAO,SAAAtC,GAAI,OAAIA,EAAKoB,KAAK,KAItD,MAAO,CAAEkB,QAAOO,YAHIC,OAAOC,OAAOJ,GAAcK,IAAI,SAAAV,GAAK,OAAIA,EAAMW,SAGtCC,OAFdJ,OAAOK,KAAKR","file":"component---src-pages-footer-js-93d9dc2b5061893ae27a.js","sourcesContent":["import React from 'react'\nimport { Virtuoso } from 'react-virtuoso'\nimport { getUser } from './FakeData'\nimport { UserItem } from './ExampleComponents'\n\nconst GenerateItem = index => {\n  return <UserItem user={getUser(index)} index={index} />\n}\n\nexport default () => (\n  <Virtuoso\n    style={{ height: '350px', width: '400px' }}\n    totalCount={100}\n    item={GenerateItem}\n    footer={() => (\n      <div style={{ padding: '1rem', textAlign: 'center' }}>\n        -- end reached --\n      </div>\n    )}\n  />\n)\n","import React from 'react';\nimport Layout from '../components/layout';\nimport Source from '../components/source';\nimport Example from '../examples/footer';\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"Footer\" />}>\n    <h2>Footer</h2>\n    <p>\n      The Virtuoso component accepts an optional <code>footer</code> render\n      property which is appended at the end of the list. The footer can be used\n      for loading indicators or load more buttons.\n    </p>\n    <p>\n      Scroll to the bottom of the list to see <code>-- end reached --</code>.\n    </p>\n    <Example />\n  </Layout>\n);\n","import faker from \"faker\"\nimport { groupBy } from \"lodash\"\n\nconst generated = []\n\nexport const getUser = index => {\n  if (!generated[index]) {\n    let firstName = faker.name.firstName()\n    let lastName = faker.name.lastName()\n    generated[index] = {\n      name: `${firstName} ${lastName}`,\n      initials: `${firstName.substr(0, 1)}${lastName.substr(0, 1)}`,\n      description: faker.company.catchPhrase(),\n      bgColor: faker.commerce.color(),\n      fgColor: faker.commerce.color(),\n      longText: faker.lorem.paragraphs(4),\n      avatar: faker.internet.avatar(),\n    }\n  }\n  return generated[index]\n}\n\nexport const generateGroupedUsers = max => {\n  const users = []\n  for (let i = 0; i < max; i++) {\n    users.push(getUser(i))\n  }\n\n  users.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1\n    }\n    if (a.name > b.name) {\n      return 1\n    }\n    return 0\n  })\n\n  const groupedUsers = groupBy(users, user => user.name[0])\n  const groupCounts = Object.values(groupedUsers).map(users => users.length)\n  const groups = Object.keys(groupedUsers)\n\n  return { users, groupCounts, groups }\n}\n"],"sourceRoot":""}