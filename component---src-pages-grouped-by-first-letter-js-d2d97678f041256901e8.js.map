{"version":3,"sources":["webpack:///./src/examples/GroupedByFirstLetter.js","webpack:///./src/pages/grouped-by-first-letter.js","webpack:///./src/examples/FakeData.js"],"names":["GroupedByFirstLetter","_generateGroupedUsers","generateGroupedUsers","users","groups","groupCounts","react_default","a","createElement","react_virtuoso_es_production","style","height","width","group","index","ExampleComponents","item","user","__webpack_exports__","layout","sidebar","source","path","generated","getUser","firstName","faker","name","lastName","initials","substr","description","company","catchPhrase","bgColor","commerce","color","fgColor","longText","lorem","paragraphs","avatar","internet","max","i","push","sort","b","groupedUsers","groupBy","Object","values","map","length","keys"],"mappings":"kKAKeA,EAAA,WAAM,IAAAC,EAQoBC,YAAqB,KAApDC,EARWF,EAQXE,MAAOC,EARIH,EAQJG,OAAQC,EARJJ,EAQII,YAEvB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCP,YAAaA,EACbQ,MAAO,SAAAC,GACL,OAAOR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KAAeX,EAAOU,KAE/BE,KAAM,SAAAF,GACJ,OAAOR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUE,KAAMd,EAAMW,GAAQA,MAAOA,QClBrCI,EAAA,0BACbZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQC,KAAK,2BAClChB,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,4CACkCF,EAAAC,EAAAC,cAAA,+BAA6B,IAD/D,wFAKAF,EAAAC,EAAAC,cAAA,yEAGAF,EAAAC,EAAAC,cAACR,EAAD,uLCbEuB,EAAY,GAELC,EAAU,SAAAV,GACrB,IAAKS,EAAUT,GAAQ,CACrB,IAAIW,EAAYC,IAAMC,KAAKF,YACvBG,EAAWF,IAAMC,KAAKC,WAC1BL,EAAUT,GAAS,CACjBa,KAASF,EAAL,IAAkBG,EACtBC,SAAQ,GAAKJ,EAAUK,OAAO,EAAG,GAAKF,EAASE,OAAO,EAAG,GACzDC,YAAaL,IAAMM,QAAQC,cAC3BC,QAASR,IAAMS,SAASC,QACxBC,QAASX,IAAMS,SAASC,QACxBE,SAAUZ,IAAMa,MAAMC,WAAW,GACjCC,OAAQf,IAAMgB,SAASD,UAG3B,OAAOlB,EAAUT,IAGNZ,EAAuB,SAAAyC,GAElC,IADA,IAAMxC,EAAQ,GACLyC,EAAI,EAAGA,EAAID,EAAKC,IACvBzC,EAAM0C,KAAKrB,EAAQoB,IAGrBzC,EAAM2C,KAAK,SAACvC,EAAGwC,GACb,OAAIxC,EAAEoB,KAAOoB,EAAEpB,MACL,EAENpB,EAAEoB,KAAOoB,EAAEpB,KACN,EAEF,IAGT,IAAMqB,EAAeC,kBAAQ9C,EAAO,SAAAc,GAAI,OAAIA,EAAKU,KAAK,KAItD,MAAO,CAAExB,QAAOE,YAHI6C,OAAOC,OAAOH,GAAcI,IAAI,SAAAjD,GAAK,OAAIA,EAAMkD,SAGtCjD,OAFd8C,OAAOI,KAAKN","file":"component---src-pages-grouped-by-first-letter-js-d2d97678f041256901e8.js","sourcesContent":["import React from 'react'\nimport { GroupedVirtuoso } from 'react-virtuoso'\nimport { generateGroupedUsers } from './FakeData'\nimport { ExampleGroup, UserItem } from './ExampleComponents'\n\nexport default () => {\n  // the generateGroupedUsers is a dummy implementation\n  // that builds grouped data\n  // the users variable contains 500 user records, sorted by name\n  // the groups variable contains the first\n  // letter groups -> ['A', 'B', 'C'], etc.\n  // finally, the groupCounts specifies how many items each\n  // group has -> [ 20, 30, 15, 10 ], etc.\n  const { users, groups, groupCounts } = generateGroupedUsers(500)\n\n  return (\n    <GroupedVirtuoso\n      style={{ height: '350px', width: '400px' }}\n      groupCounts={groupCounts}\n      group={index => {\n        return <ExampleGroup>{groups[index]}</ExampleGroup>\n      }}\n      item={index => {\n        return <UserItem user={users[index]} index={index} />\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Source from '../components/source'\nimport Example from '../examples/GroupedByFirstLetter'\n\nexport default () => (\n  <Layout sidebar={() => <Source path=\"GroupedByFirstLetter\" />}>\n    <h2>Grouped by First Letter</h2>\n    <p>\n      This is a slightly more complex <code>GroupedVirtuoso</code>{' '}\n      example, which displays 500 user records, grouped by the first\n      letter of their name.\n    </p>\n    <p>\n      Check the comments in the source code pane for more details.\n    </p>\n    <Example />\n  </Layout>\n)\n","import faker from \"faker\"\nimport { groupBy } from \"lodash\"\n\nconst generated = []\n\nexport const getUser = index => {\n  if (!generated[index]) {\n    let firstName = faker.name.firstName()\n    let lastName = faker.name.lastName()\n    generated[index] = {\n      name: `${firstName} ${lastName}`,\n      initials: `${firstName.substr(0, 1)}${lastName.substr(0, 1)}`,\n      description: faker.company.catchPhrase(),\n      bgColor: faker.commerce.color(),\n      fgColor: faker.commerce.color(),\n      longText: faker.lorem.paragraphs(4),\n      avatar: faker.internet.avatar(),\n    }\n  }\n  return generated[index]\n}\n\nexport const generateGroupedUsers = max => {\n  const users = []\n  for (let i = 0; i < max; i++) {\n    users.push(getUser(i))\n  }\n\n  users.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1\n    }\n    if (a.name > b.name) {\n      return 1\n    }\n    return 0\n  })\n\n  const groupedUsers = groupBy(users, user => user.name[0])\n  const groupCounts = Object.values(groupedUsers).map(users => users.length)\n  const groups = Object.keys(groupedUsers)\n\n  return { users, groupCounts, groups }\n}\n"],"sourceRoot":""}